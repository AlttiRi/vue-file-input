{"version":3,"file":"index.js","sources":["node-modules:///vite/modulepreload-polyfill","source-maps:///file-input/FileInputDefaultHoverText.vue","source-maps:///file-input/FileInputDefaultText.vue","source-maps:///file-input/FileInput.vue","source-maps:///file-input/WebFileEntry.js","source-maps:///file-input/file-input-state.ts","source-maps:///main.js","source-maps:///App.vue"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","<template>\n  <div class=\"default-hover-text\">{{text}}</div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from \"vue\";\nimport {FileInputState} from \"./file-input-state\";\n\nconst props = defineProps<{state: FileInputState}>();\nconst {\n  dropHoverItemCount\n} = props.state.private;\n\nconst text = computed(() => {\n  const postfix = dropHoverItemCount.value > 1 ? \"s\" : \"\";\n  return `Drop ${dropHoverItemCount.value} file${postfix}`;\n});\n</script>\n\n<style scoped>\n.default-hover-text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"default-prompt-text\" :title=\"names\">\n    <div class=\"parsing\" v-if=\"parsing\">Parsing...</div>\n    <div v-else-if=\"count\">{{count}} file{{count > 1 ? \"s\" : \"\"}}</div>\n    <div v-else style=\"display: contents\">\n      <slot>Select file</slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from \"vue\";\nimport {FileInputState} from \"./file-input-state\";\n\nconst props = defineProps<{state: FileInputState}>();\nconst {\n  count, fileEntries, parsing\n} = props.state.private;\n\nconst names = computed(() => {\n  /** @type {WebFileEntry[]} */\n  const entries = fileEntries.value;\n  return entries.slice(0, 50).map(file => file.name).join(\"\\n\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.default-prompt-text {\n  width: inherit;\n  height: inherit;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    //text-decoration: underline;\n  }\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","<template>\n  <div\n      class=\"file-input\"\n      ref=\"fileInputElem\"\n      :class=\"{'drop-hover': dropHover}\"\n      tabindex=\"0\"\n      @keydown=\"onKeyDown\"\n  >\n    <label>\n      <input type=\"file\"\n             :accept=\"accept\"\n             :multiple=\"multiple\"\n             @change=\"onFileInputChange\"\n             style=\"display: none\"\n             :nwdirectory=\"nwdirectory\"\n             ref=\"templateInputElem\"\n      >\n\n      <span class=\"content hover\" v-if=\"dropHover\">\n      <slot name=\"hover\"><FileInputDefaultHoverText :state=\"state\"/></slot>\n    </span>\n      <span class=\"content selected\" v-else-if=\"file && !parsing\">\n      <slot name=\"selected\"><FileInputDefaultText :state=\"state\"/></slot>\n    </span>\n      <span class=\"content prompt\" v-else>\n      <slot name=\"prompt\"><FileInputDefaultText :state=\"state\"/></slot>\n    </span>\n\n    </label>\n    <teleport to=\"body\">\n      <div class=\"file-input-hover-modal\" :class=\"{'drop-hover': dropHover}\"></div>\n    </teleport>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport FileInputDefaultHoverText from \"./FileInputDefaultHoverText.vue\";\nimport FileInputDefaultText      from \"./FileInputDefaultText.vue\";\nimport {FileInputState, HTMLFileInputElement} from \"./file-input-state\";\n\nimport {\n  ref, toRefs, onMounted, computed, onBeforeUnmount, watchEffect,\n  PropType, Ref, ComputedRef\n} from \"vue\";\n\nconst templateInputElem: Ref<HTMLFileInputElement | null> = ref(null);\n\nconst props = defineProps({\n  globalDropZone: {\n    type: Boolean,\n    default: true\n  },\n  dropZoneSelector: {\n    type: String,\n    default: null\n  },\n  accept: {\n    type: String,\n    default: \"*/*\"\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n  state: {\n    type: Object as PropType<FileInputState>,\n    required: true\n  },\n  nwdirectory: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst {\n  globalDropZone,\n  dropZoneSelector,\n  nwdirectory,\n} = toRefs(props);\n\nconst {\n  parsing,\n  file,\n  dropHover,\n  setFiles,\n  setDataTransfer,\n  setDataTransferHover,\n  resetDataTransferHover,\n  isNwDirectory,\n  inputElem,\n} = props.state.private;\n\n\nwatchEffect(() => {\n  isNwDirectory.value = nwdirectory.value;\n});\nonMounted(() => {\n  inputElem.value = templateInputElem.value;\n});\n\nfunction onFileInputChange(event: Event) {\n  const fileElem = event.target as HTMLFileInputElement;\n  setFiles(fileElem.files);\n}\n\nconst fileInputElem: Ref<HTMLElement | null> = ref(null);\n\nconst dropZone: ComputedRef<HTMLElement | null> = computed(() => {\n  if (dropZoneSelector.value) {\n    return document.querySelector(dropZoneSelector.value);\n  } else\n  if (globalDropZone.value) {\n    return document.body;\n  } else\n    return fileInputElem.value;\n});\n\nonMounted(() => {\n  initListeners();\n});\nonBeforeUnmount(() => {\n  removeListeners();\n});\n\nfunction initListeners() {\n  if (!dropZone.value) {\n    return;\n  }\n  dropZone.value.addEventListener(\"dragenter\", onDragEnter);\n  dropZone.value.addEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.addEventListener(\"drop\",      onDrop);\n  dropZone.value.addEventListener(\"dragover\",  onDragOver);\n  document.body.addEventListener(\"dragover\",   onDragOverNonDropZone);\n}\nfunction removeListeners() {\n  if (!dropZone.value) {\n    return;\n  }\n  dropZone.value.removeEventListener(\"dragenter\", onDragEnter);\n  dropZone.value.removeEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.removeEventListener(\"drop\",      onDrop);\n  dropZone.value.removeEventListener(\"dragover\",  onDragOver);\n  document.body.removeEventListener(\"dragover\",   onDragOverNonDropZone);\n}\n\nfunction stopEvent(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction onDrop(event: DragEvent) {\n  stopEvent(event);\n  dropHover.value = false;\n  setDataTransfer(event.dataTransfer);\n}\nfunction onDragOver(event: DragEvent) {\n  stopEvent(event);\n  if (event.dataTransfer) {\n    event.dataTransfer.dropEffect = \"copy\";\n  }\n}\nfunction onDragEnter(event: DragEvent) {\n  stopEvent(event);\n  if (!dropHover.value) {\n    dropHover.value = true;\n  } else {\n    return;\n  }\n  setDataTransferHover(event.dataTransfer);\n}\nfunction onDragLeave(event: DragEvent) {\n  stopEvent(event);\n  if (!dropZone.value?.contains(event.relatedTarget as Node)) {\n    dropHover.value = false;\n    resetDataTransferHover();\n  }\n}\n\nfunction onDragOverNonDropZone(event: DragEvent) {\n  if (!dropZone.value?.contains(event.target as Node)) {\n    stopEvent(event);\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = \"none\";\n    }\n  }\n}\n\nfunction onKeyDown(event: KeyboardEvent) {\n  if (event.key === \"Enter\") {\n    fileInputElem.value?.querySelector(\"label\")?.click();\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.file-input {\n  transition: background-color 0.1s;\n  border: solid 1px var(--file-input-border);\n  box-sizing: border-box;\n  &.drop-hover {\n    background-color: var(--drop-file-hover);\n    transition: background-color 0.1s;\n  }\n  &:hover {\n    background-color: var(--drop-hover);\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n}\n.file-input, label, .content {\n  width: 100%;\n  height: 100%;\n}\n\n.file-input-hover-modal {\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  background-image: linear-gradient(to top, rgba(0,0,0,0.15), rgba(0,0,0,0.005));\n\n  transition: opacity 0.25s ease-out;\n  opacity: 0;\n  &.drop-hover {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n","/**\n * A help type to hide dumb warnings.\n * @typedef {\"file\" | \"folder\"} WebFileEntryTypeLike\n */\n\nexport class WebFileEntry {\n    /**\n     * @param {Object} init\n     * @param {WebFileEntryTypeLike} init.type\n     * @param {File|FileWithPath}    init.file\n     * @param {String?}              init.name\n     * @param {WebFileEntry?}        init.parent\n     */\n    constructor({file, type, name, parent}) {\n        /** @type {File|FileWithPath} */\n        this.file = file;\n\n        /** @type {WebFileEntryTypeLike} */\n        this.type = type;\n\n        if (name) {\n            /** @type {String|undefined}\n             *  @private  */\n            this._name = name;\n        }\n\n        if (parent) {\n            /** @type {WebFileEntry|undefined} */\n            this.parent = parent;\n            parent.addChild(this);\n        }\n    }\n\n    /** @return {String|undefined} */\n    get nativePath() {\n        return this.file.path;\n    }\n\n    /** @return {String} */\n    get name() {\n        return this._name || this.file.name;\n    }\n\n    /** @private\n     *  @param {WebFileEntry} entry  */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {WebFileEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n\n    /** @private\n     *  @param {Number} size  */\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            /** @type {Number}\n             *  @private  */\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent/* && size*/) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this.file.size || 0;\n    }\n\n    /** @return {Number} */\n    get mtime() {\n        return this.file.lastModified || 0;\n    }\n\n    /** @return {WebFileEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    /** @return {Generator<WebFileEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {WebFileEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {WebFileEntry[]} entries\n     * @return {WebFileEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    /**\n     * @param {DataTransfer} dt\n     * @param {boolean} recursive\n     * @return {Promise<WebFileEntry[]>}\n     */\n    static async fromDataTransfer(dt, recursive) {\n        /** @type {DataTransferItem[]} */\n        const dtItems = [...dt.items];\n        /** @type {File[]} */\n        const files = [...dt.files];\n\n        /** @type {FileSystemEntry[]} */\n        const fileSystemEntries = await dtItemsToFileSystemEntries(dtItems);\n        console.log(\"[fileSystemEntries]:\", fileSystemEntries);\n\n        /** @type {WebFileEntry[]} */\n        const result = [];\n        for (const fileSystemEntry of fileSystemEntries) {\n            result.push(await fromFileSystemEntry(fileSystemEntry, null, recursive, files.shift()));\n        }\n        return result;\n    }\n\n    /**\n     * @param {File[]} files\n     * @param {WebFileEntryTypeLike?} type\n     * @return {WebFileEntry[]}\n     */\n    static fromFiles(files, type = \"file\") {\n        /** @type {WebFileEntry[]} */\n        const result = [];\n        for (const file of files) {\n            result.push(new WebFileEntry({type, file}));\n        }\n        return result;\n    }\n}\n\n/**\n * @param {FileSystemEntry} fsEntry\n * @param {WebFileEntry|null} parent\n * @param {boolean} recursive=false\n * @param {File?} file\n * @return {Promise<WebFileEntry|null>}\n */\nasync function fromFileSystemEntry(fsEntry, parent = null, recursive = false, file) {\n    if (fsEntry.isFile) {\n        try {\n            const file = await toFile(/** @type {FileSystemFileEntry} */ fsEntry);\n            return new WebFileEntry({file, type: \"file\", parent});\n        } catch (e) { // For example, for long path \\\\?\\M:\\...\n            console.error(\"[fromFileSystemEntry][error]\", fsEntry.name, e);\n            return null;\n        }\n    } else if (fsEntry.isDirectory && recursive) {\n        const dirEntry = new WebFileEntry({type: \"folder\", parent, name: fsEntry.name, file});\n        /** @type {AsyncGenerator<FileSystemEntry>} */\n        const entries = readFileSystemDirectoryEntry(/** @type {FileSystemDirectoryEntry} */ fsEntry);\n        for await (const entry of entries) {\n            // The entries will be attached to the parent (`dirEntry`).\n            await fromFileSystemEntry(entry, dirEntry, recursive);\n        }\n        return dirEntry;\n    } else {\n        return new WebFileEntry({type: \"folder\", parent, name: fsEntry.name, file});\n    }\n}\n\n/**\n * Works only with a http server\n * @param {FileSystemFileEntry} fsFileEntry\n * @return {Promise<File>}\n */\nfunction toFile(fsFileEntry) {\n    return new Promise((resolve, reject) => fsFileEntry.file(resolve, reject));\n}\n\n/**\n * @param {FileSystemDirectoryEntry} fsDirEntry\n * @return {AsyncGenerator<FileSystemEntry>}\n */\nasync function * readFileSystemDirectoryEntry(fsDirEntry) {\n    const reader = fsDirEntry.createReader();\n    let part = [];\n    do {\n        part = await new Promise((resolve, reject) => reader.readEntries(resolve, reject));\n        for (const entry of part) {\n            yield entry;\n        }\n    } while (part.length);\n}\n\n/**\n * @param {DataTransferItem[]} dtItems\n * @return {Promise<FileSystemEntry[]>}\n */\nasync function dtItemsToFileSystemEntries(dtItems) {\n    const result = [];\n    for (const entry of dtItems) {\n        result.push(await dtItemToFileSystemEntry(entry));\n    }\n    return result;\n}\n\n/**\n * @param {DataTransferItem} entry\n * @return {Promise<FileSystemEntry>}\n */\nasync function dtItemToFileSystemEntry(entry) {\n    return entry.webkitGetAsEntry();\n}\n","import {computed, ComputedRef, DeepReadonly, readonly, Ref, ref, toRaw, watchEffect} from \"vue\";\nimport {WebFileEntry} from \"./WebFileEntry\";\n\nexport interface HTMLFileInputElement extends HTMLInputElement {\n    files: FileList; // Since `HTMLInputElement` has `FileList | null`\n}\n\nexport type FileInputStatePrivate = {\n    inputElem:   Ref<HTMLFileInputElement | null>,\n    fileEntries: Ref<WebFileEntry[]>,\n    file:  ComputedRef<WebFileEntry>,\n    count: ComputedRef<number>,\n\n    dropHover: Ref<boolean>,\n    dropHoverItemCount: Ref<number>,\n    dropHoverTypes: Ref<string[]>,\n    parsing: Ref<boolean>,\n\n    setDataTransferHover(dt: DataTransfer | null): void,\n    resetDataTransferHover(): void,\n    setDataTransfer(dt: DataTransfer | null): void,\n    setFiles(filelist: FileList, resetDataTransfer?: boolean): void,\n\n    isNwDirectory: Ref<boolean>,\n}\n\nexport type FileInputState = {\n    fileEntries: DeepReadonly<Ref<WebFileEntry[]>>,\n    clearInput(): void,\n    private: FileInputStatePrivate,\n}\n\ndeclare const nw: any\nconst isNW: boolean = typeof nw !== \"undefined\" && nw[\"process\"]?.[\"__nwjs\"] === 1;\n\nexport function getStateInstance({recursive} = {recursive: false}): FileInputState {\n    const fileEntries:  Ref<WebFileEntry[]>  = ref([]);\n    const files:        Ref<File[]>          = ref([]);\n    const inputElem:    Ref<HTMLFileInputElement | null> = ref(null);\n    const parsing:      Ref<boolean>                     = ref(false);\n    const dtItems:      Ref<DataTransferItem[]>          = ref([]);\n    const dataTransfer: Ref<DataTransfer | null>         = ref(null);\n    const dropHover:    Ref<boolean>         = ref(false);\n    const dropHoverItemCount: Ref<number>    = ref(0);\n    const dropHoverTypes:     Ref<string[]>  = ref([]);\n    const isNwDirectory:      Ref<boolean>   = ref(false);\n\n    watchEffect(async () => {\n        const time: number = Date.now();\n        parsing.value = true;\n        if (dataTransfer.value) {\n            console.log(\"[fromDataTransferItems]\");\n            fileEntries.value = await WebFileEntry.fromDataTransfer(dataTransfer.value, recursive);\n        } else\n        if (isNW && isNwDirectory.value) {\n            console.log(\"[isNwDirectory]\");\n            fileEntries.value = WebFileEntry.fromFiles(files.value, \"folder\");\n        } else {\n            console.log(\"[fromFiles]\");\n            fileEntries.value = WebFileEntry.fromFiles(files.value);\n        }\n        parsing.value = false;\n        console.log(\"[WebFileEntry parsing][time]:\", Date.now() - time, \"ms\");\n        console.log(\"[fileEntries]\", toRaw(fileEntries.value));\n    });\n\n    const file: ComputedRef<WebFileEntry> = computed(() => {\n        return fileEntries.value[0];\n    });\n\n    const count: ComputedRef<number> = computed(() => {\n        return fileEntries.value.length;\n    });\n\n    function setDataTransferHover(dt: DataTransfer | null) {\n        if (!dt) {\n            return;\n        }\n        const count:    number   = dt.items.length;\n        const allTypes: string[] = [...dt.items].map(item => item.type);\n        const types:    string[] = [...new Set(allTypes)];\n\n        dropHoverItemCount.value = count;\n        dropHoverTypes.value = types;\n        console.log(\"[setDataTransferHover]:\", count, types);\n    }\n    function resetDataTransferHover() {\n        dropHoverItemCount.value = 0;\n        dropHoverTypes.value = [];\n    }\n\n    function setDataTransfer(dt: DataTransfer | null) {\n        if (!dt) {\n            return;\n        }\n        console.log(\"setDataTransfer\", dt);\n        setFiles(dt.files, false);\n        _setDtItems(dt.items);\n        dataTransfer.value = dt;\n    }\n    function setFiles(filelist: FileList, resetDataTransfer: boolean = true) {\n        const _files: File[] = [...filelist];\n        files.value = _files;\n        console.log(\"[setFiles]:\", _files);\n        if (resetDataTransfer) {\n            dataTransfer.value = null;\n            dtItems.value = [];\n        }\n    }\n    function _setDtItems(items: DataTransferItemList) {\n        const _dtItems: DataTransferItem[] = [...items];\n        dtItems.value = _dtItems;\n        console.log(\"[_setDtItems]:\", _dtItems); // bug in chromium: `type` and `kind` is \"\" in the console when expand the array.\n        console.log(\"[_setDtItems][0]:\", {\n            kind: _dtItems[0].kind, type: _dtItems[0].type\n        });\n    }\n\n    function clearInput() {\n        if (inputElem.value) {\n            inputElem.value.value = \"\";\n        }\n        files.value = [];\n        dataTransfer.value = null;\n        dtItems.value = [];\n    }\n\n    return {\n        fileEntries: readonly(fileEntries),\n        clearInput,\n        private: {\n            dropHover, dropHoverItemCount, dropHoverTypes,\n            fileEntries, parsing,\n            file, count,\n            setDataTransferHover, resetDataTransferHover,\n            setDataTransfer, setFiles,\n            isNwDirectory,\n            inputElem,\n        }\n    };\n}\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","<template>\n  <FileInput :state=\"state\"/>\n</template>\n\n<script setup>\nimport {FileInput, getStateInstance} from \"./file-input/index.js\";\n// or\n// // import {FileInput, getStateInstance} from \"@alttiri/vue-file-input\";\n\n\nconst state = getStateInstance({recursive: true});\nglobalThis.state = state;\n</script>\n\n<style>\n\n</style>\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","dropHoverItemCount","props","state","private","text","computed","postfix","value","count","fileEntries","parsing","names","slice","map","file","name","join","templateInputElem","ref","globalDropZone","dropZoneSelector","nwdirectory","toRefs","dropHover","setFiles","setDataTransfer","setDataTransferHover","resetDataTransferHover","isNwDirectory","inputElem","onFileInputChange","event","fileElem","target","files","watchEffect","onMounted","fileInputElem","dropZone","querySelector","body","stopEvent","preventDefault","stopPropagation","onDrop","dataTransfer","onDragOver","dropEffect","onDragEnter","onDragLeave","contains","relatedTarget","onDragOverNonDropZone","onKeyDown","key","click","addEventListener","onBeforeUnmount","removeEventListener","WebFileEntry","constructor","parent","this","_name","addChild","nativePath","path","entry","children","push","increaseContentSize","size","_contentSize","mtime","lastModified","Symbol","iterator","child","flat","static","entries","e","dt","recursive","dtItems","items","fileSystemEntries","async","result","dtItemToFileSystemEntry","dtItemsToFileSystemEntries","console","log","fileSystemEntry","fromFileSystemEntry","shift","fsEntry","isFile","isDirectory","dirEntry","fsDirEntry","reader","createReader","part","Promise","resolve","reject","readEntries","length","readFileSystemDirectoryEntry","fsFileEntry","error","webkitGetAsEntry","isNW","nw","getStateInstance","dropHoverTypes","time","Date","now","fromDataTransfer","fromFiles","toRaw","filelist","resetDataTransfer","_files","readonly","clearInput","allTypes","item","types","Set","_dtItems","kind","_setDtItems","createApp","globalThis","mount"],"mappings":"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"}